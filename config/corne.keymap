/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT   0
#define GAME      1
#define AUTOSHIFT 2
#define LOWER     3
#define RAISE     4

//For RGB support per https://github.com/zmkfirmware/zmk/issues/885
//#include <../boards/shields/kyria/boards/nice_nano.overlay>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        as: autoshift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    macros {
        lambda: lambda {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "LAMBDA";
        };

        Owner: Owner {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(T) &kp H &kp I &kp S &kp SPACE &kp K &kp E &kp Y &kp B &kp O &kp A &kp R &kp D &kp SPACE &kp I &kp S &kp SPACE &kp O &kp W &kp N &kp E &kp D &kp SPACE &kp B &kp Y &kp SPACE &kp LS(A) &kp L &kp A &kp N &kp SPACE &kp LS(G) &kp A &kp R &kp D &kp N &kp E &kp R &kp DOT &kp SPACE &kp LS(G) &kp O &kp SPACE &kp N &kp I &kp C &kp K &kp SPACE &kp A &kp N &kp O &kp T &kp H &kp E &kp R>;
            label = "OWNER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // |  WIN |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  | ; : | ' @  |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   | , < | . > | / ? | ESC  |
            //                    | CTRL| LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q       &kp W       &kp E        &kp R        &kp T        &kp Y    &kp U        &kp I        &kp O       &kp P          &trans
&kp TAB     &hm LGUI A  &hm LALT S  &hm LCTRL D  &hm LSHFT F  &kp G        &kp H    &hm LSHFT J  &hm LCTRL K  &hm LALT L  &hm LGUI SEMI  &kp SQT
&trans      &kp Z       &kp X       &kp C        &kp V        &kp B        &kp N    &kp M        &kp COMMA    &kp DOT     &kp FSLH       &kp PRINTSCREEN
                                    &mo 7        &mo LOWER    &kp SPACE    &kp RET  &mo RAISE    &mo 7
            >;

            label = "Home Row Mods";
        };

        game_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  | ; : | ' @  |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   | , < | . > | / ? | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E       &kp R   &kp T        &kp Y    &kp U   &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D       &kp F   &kp G        &kp H    &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C       &kp V   &kp B        &kp N    &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                         &kp ESCAPE  &trans  &kp SPACE    &kp RET  &trans  &trans
            >;

            label = "Game";
        };

        autoshift_layer {
            bindings = <
&trans  &as LS(Q) Q  &as LS(W) W  &as LS(E) E  &as LS(R) R  &as LS(T) T    &as LS(Y) Y  &as LS(U) U  &as LS(I) I  &as LS(O) O  &as LS(P) P  &trans
&trans  &as LS(A) A  &as LS(S) S  &as LS(D) D  &as LS(F) F  &as LS(G) G    &as LS(H) H  &as LS(J) J  &as LS(K) K  &as LS(L) L  &trans       &trans
&trans  &as LS(Z) Z  &as LS(X) X  &as LS(C) C  &as LS(V) V  &as LS(B) B    &as LS(N) N  &as LS(M) M  &trans       &trans       &trans       &trans
                                  &trans       &trans       &trans         &trans       &trans       &trans
            >;

            label = "AutoShift";
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  F1  | F2  | F3  | F4  | F5  | F6  |   | F7  | F8  | F9  | F10 | F11 | F12  |
            // | HOME | LFT |  UP | DWN | RGT | END |   |     | SHFT| CTRL| ALT | GUI |      |
            // | SHFT |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
            //                    | GUI |     | SPC |   | ENT | BKSP| DEL |

            bindings = <
&kp F1    &kp F2    &kp F3  &kp F4      &kp F5     &kp F6     &kp F7  &kp F8         &kp F9     &kp F10   &kp F11   &kp F12
&kp HOME  &kp LEFT  &kp UP  &kp DOWN    &kp RIGHT  &kp END    &trans  &kp LSHFT      &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans    &kp N1    &kp N2  &kp N3      &kp N4     &kp N5     &kp N6  &kp N7         &kp N8     &kp N9    &kp N0    &trans
                            &kp ESCAPE  &trans     &trans     &trans  &kp BACKSPACE  &kp DEL
            >;

            label = "Lower";
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  "  |  #  |  $  |  %   |   |  ^  |  &  |  *  |  (  |  )  | DEL |
            // | CAPS |     |     |     | BT_1| BT_0 |   |  -  |  =  |  [  |  ]  |  `  |  #  |
            // | SHFT |  \  |  |  |     | GAME|BT_CLR|   |  _  |  +  |  {  |  }  |  ~  |  Â¬  |
            //                    |     |     |      |   |     |     |R-ALT|

            bindings = <
&trans      &kp EXCL   &kp AT     &kp HASH         &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR         &kp RPAR  &trans
&trans      &trans     &trans     &mo 6            &mo 5      &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp NON_US_BSLH  &kp BSLH  &kp GRAVE
&caps_word  &kp LC(Z)  &kp LC(Y)  &mt LC(X) LC(C)  &kp LC(V)  &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp PIPE2        &kp PIPE  &kp TILDE
                                  &trans           &trans     &trans       &trans     &trans     &kp RALT
            >;

            label = "Raise";
        };

        ShiftRaise {
            bindings = <
&Owner  &trans  &trans  &trans  &trans  &trans    &trans  &trans   &trans  &kp LS(LBKT)  &kp LS(RBKT)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &lambda  &trans  &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans   &trans  &trans        &trans        &trans
                        &trans  &trans  &trans    &trans  &trans   &trans
            >;
        };

        CtrlRaise {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &kp LBKT  &kp RBKT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans    &trans    &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        Admin {
            bindings = <
&trans  &trans  &trans  &tog 2  &tog 1        &to 0           &trans        &trans        &trans        &trans  &trans  &bt BT_CLR
&trans  &trans  &trans  &trans  &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans        &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans        &bt BT_NXT      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans  &trans
                        &trans  &trans        &trans          &trans        &trans        &trans
            >;
        };

        //             unused_layer {
        // -----------------------------------------------------------------------------------------
        // |      |     |     |     |     |     |   |     |     |     |     |     |      |
        // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
        // |      |     |     |     |     |     |   |     |     |     |     |     |      |
        //                    |     |     |     |   | ENT | BKSP| DEL |
        //                        bindings = <
        //   &trans  &trans &trans &trans &trans &trans            &trans &trans  &trans &trans &trans &trans
        //   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
        //   &trans &trans   &trans &trans   &trans   &trans       &trans &trans   &trans &trans   &trans   &trans
        //                    	     &trans &trans &trans          &trans     &trans   &trans  
        //                      >;
        //              };
    };
};
